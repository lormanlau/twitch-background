{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["clientId","getRandomInt","Math","floor","random","App","useState","ready","setReady","demo","setDemo","_authUrl","setAuthUrl","r","g","b","left","setLeft","right","setRight","ws","useRef","useEffect","clock","setInterval","clearInterval","authUrl","useCallback","sessionStorage","twitchOAuthState","nonce","length","text","possible","i","charAt","listen","channelId","message","type","data","topics","auth_token","twitchOAuthToken","console","log","Date","toLocaleString","current","send","JSON","stringify","heartbeat","connect","heartbeatHandle","connected","WebSocket","onopen","event","onerror","error","onmessage","parse","fetch","headers","Authorization","then","res","json","id","setTimeout","rgbValue","hex","result","exec","parseInt","hexToRgb","redemption","user_input","reward","title","includes","onclose","document","location","hash","match","hashMatch","expr","state","parseFragment","className","style","background","display","href","src","logo","alt","xmlns","viewBox","preserveAspectRatio","shapeRendering","d","x","y","fill","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1895c4b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nconst clientId = \"jzrppcr9rjx38gwy84w3v6s56t0v2t\";\r\nconst redirectURI = \"https://lormanlau.github.io/twitch-background/\";\r\nconst scope = \"channel:read:redemptions%20user:read:email\";\r\n\r\nconst getRandomInt = () => {\r\n  return Math.floor(Math.random() * 256);\r\n};\r\n\r\nconst hexToRgb = (hex) => {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n      }\r\n    : {\r\n        r: 0,\r\n        g: 0,\r\n        b: 0,\r\n      };\r\n};\r\n\r\nfunction App() {\r\n  const [ready, setReady] = useState(false);\r\n  const [demo, setDemo] = useState(true);\r\n  const [_authUrl, setAuthUrl] = useState(\"/twitch-background\");\r\n  const [left, setLeft] = useState({ r: 84, g: 58, b: 183 });\r\n  const [right, setRight] = useState({ r: 0, g: 172, b: 193 });\r\n  var ws = useRef();\r\n\r\n  /* for testing to generate random colors */\r\n  useEffect(() => {\r\n    let clock;\r\n    if (demo) {\r\n      clock = setInterval(() => {\r\n        setLeft({ r: getRandomInt(), g: getRandomInt(), b: getRandomInt() });\r\n        setRight({ r: getRandomInt(), g: getRandomInt(), b: getRandomInt() });\r\n      }, 5000);\r\n    }\r\n    return () => {\r\n      clearInterval(clock);\r\n    };\r\n  }, [demo]);\r\n\r\n  var parseFragment = (hash) => {\r\n    var hashMatch = function (expr) {\r\n      var match = hash.match(expr);\r\n      return match ? match[1] : null;\r\n    };\r\n    var state = hashMatch(/state=(\\w+)/);\r\n    if (sessionStorage.twitchOAuthState === state)\r\n      sessionStorage.twitchOAuthToken = hashMatch(/access_token=(\\w+)/);\r\n  };\r\n\r\n  var authUrl = useCallback(() => {\r\n    sessionStorage.twitchOAuthState = nonce(15);\r\n    var url =\r\n      \"https://id.twitch.tv/oauth2/authorize\" +\r\n      \"?response_type=token\" +\r\n      \"&client_id=\" +\r\n      clientId +\r\n      \"&redirect_uri=\" +\r\n      redirectURI +\r\n      \"&state=\" +\r\n      sessionStorage.twitchOAuthState +\r\n      \"&scope=\" +\r\n      scope;\r\n    return url;\r\n  }, []);\r\n\r\n  var getUserId = () => {\r\n    return fetch(\"https://api.twitch.tv/helix/users\", {\r\n      headers: {\r\n        Authorization: `Bearer ${sessionStorage.twitchOAuthToken}`,\r\n        \"Client-Id\": clientId,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => data.data[0].id);\r\n  };\r\n\r\n  var nonce = (length) => {\r\n    var text = \"\";\r\n    var possible =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < length; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  };\r\n  var listen = useCallback((channelId) => {\r\n    let message = {\r\n      type: \"LISTEN\",\r\n      nonce: nonce(15),\r\n      data: {\r\n        topics: [`channel-points-channel-v1.${channelId}`],\r\n        auth_token: sessionStorage.twitchOAuthToken,\r\n      },\r\n    };\r\n    console.log(new Date().toLocaleString(), \"SENT:\", message);\r\n    ws.current.send(JSON.stringify(message));\r\n  }, []);\r\n\r\n  var heartbeat = () => {\r\n    let message = {\r\n      type: \"PING\",\r\n    };\r\n    ws.current.send(JSON.stringify(message));\r\n  };\r\n\r\n  var connect = useCallback(() => {\r\n    var heartbeatInterval = 1000 * 60;\r\n    var reconnectInterval = 1000 * 3;\r\n    var heartbeatHandle;\r\n    var connected = false;\r\n\r\n    ws.current = new WebSocket(\"wss://pubsub-edge.twitch.tv\");\r\n\r\n    ws.current.onopen = function (event) {\r\n      console.log(new Date().toLocaleString(), \"INFO: Socket Opened\");\r\n      heartbeat();\r\n      heartbeatHandle = setInterval(heartbeat, heartbeatInterval);\r\n    };\r\n\r\n    ws.current.onerror = function (error) {\r\n      console.error(new Date().toLocaleString(), \"ERR:\", error);\r\n    };\r\n\r\n    ws.current.onmessage = function (event) {\r\n      let message = JSON.parse(event.data);\r\n      console.log(new Date().toLocaleString(), \"RECV:\", message);\r\n      if (message.type === \"PONG\") {\r\n        if (!connected) {\r\n          getUserId().then((channelId) => {\r\n            connected = true;\r\n            listen(channelId);\r\n          });\r\n        }\r\n      }\r\n      if (message.type === \"RECONNECT\") {\r\n        console.log(new Date().toLocaleString(), \"INFO: Reconnecting...\");\r\n        setTimeout(connect, reconnectInterval);\r\n      }\r\n      if (message.type === \"reward-redeemed\") {\r\n        let color = message.data.redemption.user_input;\r\n        let rgbValue = hexToRgb(color);\r\n        if (message.data.reward.title.includes(\"left\")) {\r\n          setLeft(rgbValue);\r\n        } else if (message.reward.title.includes(\"right\")) {\r\n          setRight(rgbValue);\r\n        }\r\n      }\r\n    };\r\n\r\n    ws.current.onclose = function () {\r\n      console.log(new Date().toLocaleString(), \"INFO: Socket Closed\");\r\n      clearInterval(heartbeatHandle);\r\n      console.log(new Date().toLocaleString(), \"INFO: Reconnecting...\");\r\n      setTimeout(connect, reconnectInterval);\r\n      connected = false;\r\n    };\r\n  }, [ws, listen]);\r\n\r\n  useEffect(() => {\r\n    if (document.location.hash.match(/access_token=(\\w+)/))\r\n      parseFragment(document.location.hash);\r\n    if (sessionStorage.twitchOAuthToken) {\r\n      connect();\r\n      setReady(true);\r\n      setDemo(false);\r\n    } else {\r\n      setAuthUrl(authUrl());\r\n      setReady(false);\r\n    }\r\n  }, [authUrl, connect]);\r\n\r\n  return (\r\n    <div\r\n      className=\"header\"\r\n      style={{\r\n        background: `linear-gradient(60deg, rgba(${left.r},${left.g},${left.b}) 0%, rgba(${right.r},${right.g},${right.b}) 100%)`,\r\n      }}\r\n    >\r\n      <div className=\"inner-header flex\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div\r\n              style={{ display: ready ? \"none\" : \"block\" }}\r\n              className=\"auth text-center\"\r\n            >\r\n              <p>First, connect with your Twitch Account:</p>\r\n              <a id=\"auth-link\" href={_authUrl}>\r\n                <img src={logo} alt=\"logo\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <svg\r\n          className=\"waves\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 24 150 28\"\r\n          preserveAspectRatio=\"none\"\r\n          shapeRendering=\"auto\"\r\n        >\r\n          <defs>\r\n            <path\r\n              id=\"gentle-wave\"\r\n              d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\r\n            />\r\n          </defs>\r\n          <g className=\"parallax\">\r\n            <use href=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\r\n            <use\r\n              href=\"#gentle-wave\"\r\n              x=\"48\"\r\n              y=\"3\"\r\n              fill=\"rgba(255,255,255,0.5)\"\r\n            />\r\n            <use\r\n              href=\"#gentle-wave\"\r\n              x=\"48\"\r\n              y=\"5\"\r\n              fill=\"rgba(255,255,255,0.3)\"\r\n            />\r\n            <use href=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}