{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["clientId","getRandomInt","Math","floor","random","App","useState","ready","setReady","demo","setDemo","_authUrl","setAuthUrl","r","g","b","left","setLeft","right","setRight","ws","useRef","useEffect","clock","setInterval","clearInterval","authUrl","useCallback","sessionStorage","twitchOAuthState","nonce","length","text","possible","i","charAt","listen","channelId","message","type","data","topics","auth_token","twitchOAuthToken","console","log","Date","toLocaleString","current","send","JSON","stringify","heartbeat","connect","heartbeatHandle","connected","WebSocket","onopen","event","onerror","error","onmessage","parse","string","fetch","headers","Authorization","then","res","json","id","setTimeout","rgbValue","hex","result","exec","parseInt","hexToRgb","redemption","user_input","reward","title","includes","onclose","document","location","hash","match","hashMatch","expr","state","parseFragment","className","style","background","display","href","src","logo","alt","xmlns","viewBox","preserveAspectRatio","shapeRendering","d","x","y","fill","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b711bb4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\n\nconst clientId = \"jzrppcr9rjx38gwy84w3v6s56t0v2t\";\nconst redirectURI = \"https://lormanlau.github.io/twitch-background/\";\nconst scope = \"channel:read:redemptions%20user:read:email\";\n\nconst getRandomInt = () => {\n  return Math.floor(Math.random() * 256);\n};\n\nconst hexToRgb = (hex) => {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : {\n        r: 0,\n        g: 0,\n        b: 0,\n      };\n};\n\nfunction App() {\n  const [ready, setReady] = useState(false);\n  const [demo, setDemo] = useState(true);\n  const [_authUrl, setAuthUrl] = useState(\"/twitch-background\");\n  const [left, setLeft] = useState({ r: 84, g: 58, b: 183 });\n  const [right, setRight] = useState({ r: 0, g: 172, b: 193 });\n  var ws = useRef();\n\n  /* for testing to generate random colors */\n  useEffect(() => {\n    let clock;\n    if (demo) {\n      clock = setInterval(() => {\n        setLeft({ r: getRandomInt(), g: getRandomInt(), b: getRandomInt() });\n        setRight({ r: getRandomInt(), g: getRandomInt(), b: getRandomInt() });\n      }, 5000);\n    }\n    return () => {\n      clearInterval(clock);\n    };\n  }, [demo]);\n\n  var parseFragment = (hash) => {\n    var hashMatch = function (expr) {\n      var match = hash.match(expr);\n      return match ? match[1] : null;\n    };\n    var state = hashMatch(/state=(\\w+)/);\n    if (sessionStorage.twitchOAuthState === state)\n      sessionStorage.twitchOAuthToken = hashMatch(/access_token=(\\w+)/);\n  };\n\n  var authUrl = useCallback(() => {\n    sessionStorage.twitchOAuthState = nonce(15);\n    var url =\n      \"https://id.twitch.tv/oauth2/authorize\" +\n      \"?response_type=token\" +\n      \"&client_id=\" +\n      clientId +\n      \"&redirect_uri=\" +\n      redirectURI +\n      \"&state=\" +\n      sessionStorage.twitchOAuthState +\n      \"&scope=\" +\n      scope;\n    return url;\n  }, []);\n\n  var getUserId = () => {\n    return fetch(\"https://api.twitch.tv/helix/users\", {\n      headers: {\n        Authorization: `Bearer ${sessionStorage.twitchOAuthToken}`,\n        \"Client-Id\": clientId,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data.data[0].id);\n  };\n\n  var nonce = (length) => {\n    var text = \"\";\n    var possible =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  };\n  var listen = useCallback((channelId) => {\n    let message = {\n      type: \"LISTEN\",\n      nonce: nonce(15),\n      data: {\n        topics: [`channel-points-channel-v1.${channelId}`],\n        auth_token: sessionStorage.twitchOAuthToken,\n      },\n    };\n    console.log(new Date().toLocaleString(), \"SENT:\", message);\n    ws.current.send(JSON.stringify(message));\n  }, []);\n\n  var heartbeat = () => {\n    let message = {\n      type: \"PING\",\n    };\n    ws.current.send(JSON.stringify(message));\n  };\n\n  var connect = useCallback(() => {\n    var heartbeatInterval = 1000 * 60;\n    var reconnectInterval = 1000 * 3;\n    var heartbeatHandle;\n    var connected = false;\n\n    ws.current = new WebSocket(\"wss://pubsub-edge.twitch.tv\");\n\n    ws.current.onopen = function (event) {\n      console.log(new Date().toLocaleString(), \"INFO: Socket Opened\");\n      heartbeat();\n      heartbeatHandle = setInterval(heartbeat, heartbeatInterval);\n    };\n\n    ws.current.onerror = function (error) {\n      console.error(new Date().toLocaleString(), \"ERR:\", error);\n    };\n\n    ws.current.onmessage = function (event) {\n      let message = JSON.parse(event.data);\n      console.log(new Date().toLocaleString(), \"RECV:\", message);\n      let string = message.data && message.data.message;\n      let parsedMessage = string && JSON.parse(string)\n      if (message.type === \"PONG\") {\n        if (!connected) {\n          getUserId().then((channelId) => {\n            connected = true;\n            listen(channelId);\n          });\n        }\n      }\n      if (message.type === \"RECONNECT\") {\n        console.log(new Date().toLocaleString(), \"INFO: Reconnecting...\");\n        setTimeout(connect, reconnectInterval);\n      }\n      if (message.type === \"reward-redeemed\") {\n        let color = message.data.redemption.user_input;\n        let rgbValue = hexToRgb(color);\n        if (message.data.reward.title.includes(\"left\")) {\n          setLeft(rgbValue);\n        } else if (message.reward.title.includes(\"right\")) {\n          setRight(rgbValue);\n        }\n      }\n    };\n\n    ws.current.onclose = function () {\n      console.log(new Date().toLocaleString(), \"INFO: Socket Closed\");\n      clearInterval(heartbeatHandle);\n      console.log(new Date().toLocaleString(), \"INFO: Reconnecting...\");\n      setTimeout(connect, reconnectInterval);\n      connected = false;\n    };\n  }, [ws, listen]);\n\n  useEffect(() => {\n    if (document.location.hash.match(/access_token=(\\w+)/))\n      parseFragment(document.location.hash);\n    if (sessionStorage.twitchOAuthToken) {\n      connect();\n      setReady(true);\n      setDemo(false);\n    } else {\n      setAuthUrl(authUrl());\n      setReady(false);\n    }\n  }, [authUrl, connect]);\n\n  return (\n    <div\n      className=\"header\"\n      style={{\n        background: `linear-gradient(60deg, rgba(${left.r},${left.g},${left.b}) 0%, rgba(${right.r},${right.g},${right.b}) 100%)`,\n      }}\n    >\n      <div className=\"inner-header flex\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div\n              style={{ display: ready ? \"none\" : \"block\" }}\n              className=\"auth text-center\"\n            >\n              <p>First, connect with your Twitch Account:</p>\n              <a id=\"auth-link\" href={_authUrl}>\n                <img src={logo} alt=\"logo\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <svg\n          className=\"waves\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 24 150 28\"\n          preserveAspectRatio=\"none\"\n          shapeRendering=\"auto\"\n        >\n          <defs>\n            <path\n              id=\"gentle-wave\"\n              d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n            />\n          </defs>\n          <g className=\"parallax\">\n            <use href=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\n            <use\n              href=\"#gentle-wave\"\n              x=\"48\"\n              y=\"3\"\n              fill=\"rgba(255,255,255,0.5)\"\n            />\n            <use\n              href=\"#gentle-wave\"\n              x=\"48\"\n              y=\"5\"\n              fill=\"rgba(255,255,255,0.3)\"\n            />\n            <use href=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}