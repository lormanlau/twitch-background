{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","ws","useState","ready","setReady","_authUrl","setAuthUrl","nonce","length","text","possible","i","charAt","Math","floor","random","heartbeat","send","JSON","stringify","type","connect","heartbeatHandle","WebSocket","onopen","event","console","log","setInterval","onerror","error","onmessage","message","parse","data","setTimeout","onclose","clearInterval","useEffect","document","location","hash","match","hashMatch","expr","state","sessionStorage","twitchOAuthState","twitchOAuthToken","parseFragment","className","style","display","id","src","logo","alt","xmlns","viewBox","preserveAspectRatio","shapeRendering","d","href","x","y","fill","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2MAAe,MAA0B,iC,eC6I1BA,MArIf,WACE,IAEIC,EAFJ,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA+BF,mBAAS,sBAAxC,mBAAOG,EAAP,KAAiBC,EAAjB,KAwBIC,EAAQ,SAACC,GAGX,IAFA,IAAIC,EAAO,GACPC,EAAW,iEACNC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAE9D,OAAOC,GAGLO,EAAY,WAIdf,EAAGgB,KAAKC,KAAKC,UAHC,CACZC,KAAM,WAkBNC,EAAU,SAAVA,IACF,IAEIC,GAEJrB,EAAK,IAAIsB,UAAU,gCAEhBC,OAAS,SAAUC,GACpBC,QAAQC,IAAI,uBACZX,IACAM,EAAkBM,YAAYZ,EATR,MAYxBf,EAAG4B,QAAU,SAAUC,GACrBJ,QAAQI,MAAM,OAAOA,IAGvB7B,EAAG8B,UAAY,SAAUN,GACvB,IAAIO,EAAUd,KAAKe,MAAMR,EAAMS,MAC/BR,QAAQC,IAAI,QAAQK,GACC,cAAjBA,EAAQZ,OACVM,QAAQC,IAAI,yBACZQ,WAAWd,EApBS,OAwBxBpB,EAAGmC,QAAU,WACXV,QAAQC,IAAI,uBACZU,cAAcf,GACdI,QAAQC,IAAI,yBACZQ,WAAWd,EA5BW,OA8C1B,OAbAiB,qBAAU,WACJC,SAASC,SAASC,KAAKC,MAAM,uBAtFf,SAACD,GACnB,IAAIE,EAAY,SAAUC,GACxB,IAAIF,EAAQD,EAAKC,MAAME,GACvB,OAAOF,EAAQA,EAAM,GAAK,MAExBG,EAAQF,EAAU,eAClBG,eAAeC,mBAAqBF,IACtCC,eAAeE,iBAAmBL,EAAU,uBAgF5CM,CAAcV,SAASC,SAASC,MAC9BK,eAAeE,kBACjB3B,IACAL,IACAZ,GAAS,KAETE,GAlFFwC,eAAeC,iBAAmBxC,EAAM,IAC9B,wKAIIuC,eAAeC,iBAJnB,oCAkFR3C,GAAS,MAEX,IAGA,sBAAK8C,UAAU,SAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKC,MAAO,CAACC,QAASjD,EAAQ,OAAS,SAAS+C,UAAU,mBAA1D,UACE,yEACA,mBAAGG,GAAG,YAAYC,IAAKjD,EAAvB,SAAiC,qBAAKiD,IAAKC,EAAMC,IAAI,oBAK7D,8BACE,sBAAKN,UAAU,QAAQO,MAAM,6BAC3BC,QAAQ,cAAcC,oBAAoB,OAAOC,eAAe,OADlE,UAEE,+BACE,sBAAMP,GAAG,cAAcQ,EAAE,+EAE3B,oBAAGX,UAAU,WAAb,UACE,qBAAKY,KAAK,eAAeC,EAAE,KAAKC,EAAE,IAAIC,KAAK,yBAC3C,qBAAKH,KAAK,eAAeC,EAAE,KAAKC,EAAE,IAAIC,KAAK,0BAC3C,qBAAKH,KAAK,eAAeC,EAAE,KAAKC,EAAE,IAAIC,KAAK,0BAC3C,qBAAKH,KAAK,eAAeC,EAAE,KAAKC,EAAE,IAAIC,KAAK,qBCzHxCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,SAM1BZ,K","file":"static/js/main.5f10a59c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\n\nconst clientId = 'jzrppcr9rjx38gwy84w3v6s56t0v2t';\nconst redirectURI = 'https://lormanlau.github.io/twitch-background/';\nconst scope = 'channel:read:redemptions';\n\nfunction App() {\n  const [ready, setReady] = useState(false);\n  const [_authUrl, setAuthUrl] = useState(\"/twitch-background\");\n  var ws;\n\n  var parseFragment = (hash) => {\n    var hashMatch = function (expr) {\n      var match = hash.match(expr);\n      return match ? match[1] : null;\n    };\n    var state = hashMatch(/state=(\\w+)/);\n    if (sessionStorage.twitchOAuthState === state)\n      sessionStorage.twitchOAuthToken = hashMatch(/access_token=(\\w+)/);\n  };\n\n  var authUrl = () => {\n    sessionStorage.twitchOAuthState = nonce(15);\n    var url = 'https://id.twitch.tv/oauth2/authorize' +\n      '?response_type=token' +\n      '&client_id=' + clientId +\n      '&redirect_uri=' + redirectURI +\n      '&state=' + sessionStorage.twitchOAuthState +\n      '&scope=' + scope;\n    return url\n  }\n\n  var nonce = (length) => {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  var heartbeat = () => {\n    let message = {\n      type: 'PING'\n    }\n    ws.send(JSON.stringify(message));\n  }\n\n  var listen = (topic) => {\n    let message = {\n      type: 'LISTEN',\n      nonce: nonce(15),\n      data: {\n        topics: [topic],\n        auth_token: sessionStorage.twitchOAuthToken\n      }\n    };\n    console.log('SENT:',message);\n    ws.send(JSON.stringify(message));\n  }\n\n  var connect = () => {\n    var heartbeatInterval = 1000 * 60; \n    var reconnectInterval = 1000 * 3;\n    var heartbeatHandle;\n\n    ws = new WebSocket('wss://pubsub-edge.twitch.tv');\n\n    ws.onopen = function (event) {\n      console.log('INFO: Socket Opened');\n      heartbeat();\n      heartbeatHandle = setInterval(heartbeat, heartbeatInterval);\n    };\n\n    ws.onerror = function (error) {\n      console.error('ERR:',error);\n    };\n\n    ws.onmessage = function (event) {\n      let message = JSON.parse(event.data);\n      console.log('RECV:',message);\n      if (message.type === 'RECONNECT') {\n        console.log('INFO: Reconnecting...');\n        setTimeout(connect, reconnectInterval);\n      }\n    };\n\n    ws.onclose = function () {\n      console.log('INFO: Socket Closed');\n      clearInterval(heartbeatHandle);\n      console.log('INFO: Reconnecting...');\n      setTimeout(connect, reconnectInterval);\n    };\n\n  }\n\n  useEffect(() => {\n    if (document.location.hash.match(/access_token=(\\w+)/))\n      parseFragment(document.location.hash);\n    if (sessionStorage.twitchOAuthToken) {\n      connect();\n      heartbeat();\n      setReady(true)\n    } else {\n      setAuthUrl(authUrl());\n      setReady(false)\n    }\n  },[]);\n\n  return (\n    <div className=\"header\">\n      <div className=\"inner-header flex\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div style={{display: ready ? \"none\" : \"block\"}}className=\"auth text-center\">\n              <p>First, connect with your Twitch Account:</p>\n              <a id=\"auth-link\" src={_authUrl}><img src={logo} alt=\"logo\" /></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <svg className=\"waves\" xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shapeRendering=\"auto\">\n          <defs>\n            <path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\n          </defs>\n          <g className=\"parallax\">\n            <use href=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\n            <use href=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"rgba(255,255,255,0.5)\" />\n            <use href=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"rgba(255,255,255,0.3)\" />\n            <use href=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}