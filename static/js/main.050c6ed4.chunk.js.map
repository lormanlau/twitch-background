{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["clientId","getRandomInt","Math","floor","random","App","useState","ready","setReady","demo","setDemo","connected","setConnected","_authUrl","setAuthUrl","r","g","b","left","setLeft","right","setRight","ws","useRef","useEffect","clock","setInterval","clearInterval","authUrl","useCallback","sessionStorage","twitchOAuthState","nonce","length","text","possible","i","charAt","heartbeat","current","send","JSON","stringify","type","connect","heartbeatHandle","WebSocket","onopen","event","console","log","Date","toLocaleString","onerror","error","onmessage","message","parse","data","fetch","headers","Authorization","twitchOAuthToken","then","setTimeout","rgbValue","hex","result","exec","parseInt","hexToRgb","redemption","user_input","reward","title","includes","onclose","document","location","hash","match","hashMatch","expr","state","parseFragment","className","style","background","display","id","href","src","logo","alt","xmlns","viewBox","preserveAspectRatio","shapeRendering","d","x","y","fill","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.050c6ed4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\n\nconst clientId = 'jzrppcr9rjx38gwy84w3v6s56t0v2t';\nconst redirectURI = 'https://lormanlau.github.io/twitch-background/';\nconst scope = 'channel:read:redemptions%20user:read:email';\n\nconst getRandomInt = () => {\n  return Math.floor(Math.random() * 256);\n}\n\nconst hexToRgb = (hex) => {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : {\n    r: 0,\n    g: 0,\n    b: 0\n  }\n}\n\nfunction App() {\n  const [ready, setReady] = useState(false);\n  const [demo, setDemo] = useState(true);\n  const [connected, setConnected] = useState(false);\n  const [_authUrl, setAuthUrl] = useState(\"/twitch-background\");\n  const [left, setLeft] = useState({ r: 84, g: 58, b: 183 })\n  const [right, setRight] = useState({ r: 0, g: 172, b: 193 })\n  var ws = useRef()\n\n  /* for testing to generate random colors */\n  useEffect(() => {\n    let clock;\n    if (demo) {\n      clock = setInterval(() => {\n        setLeft({ r: getRandomInt(), g: getRandomInt(), b: getRandomInt() })\n        setRight({ r: getRandomInt(), g: getRandomInt(), b: getRandomInt() })\n      }, 5000);\n    }\n    return (() => { clearInterval(clock) })\n  }, [demo])\n\n\n  var parseFragment = (hash) => {\n    var hashMatch = function (expr) {\n      var match = hash.match(expr);\n      return match ? match[1] : null;\n    };\n    var state = hashMatch(/state=(\\w+)/);\n    if (sessionStorage.twitchOAuthState === state)\n      sessionStorage.twitchOAuthToken = hashMatch(/access_token=(\\w+)/);\n  };\n\n  var authUrl = useCallback(() => {\n    sessionStorage.twitchOAuthState = nonce(15);\n    var url = 'https://id.twitch.tv/oauth2/authorize' +\n      '?response_type=token' +\n      '&client_id=' + clientId +\n      '&redirect_uri=' + redirectURI +\n      '&state=' + sessionStorage.twitchOAuthState +\n      '&scope=' + scope;\n    return url\n  }, [])\n\n  var getUserId = () => {\n    return fetch(\"https://api.twitch.tv/helix/users\", {\n      headers: {\n        Authorization: `Bearer ${sessionStorage.twitchOAuthToken}`,\n        \"Client-Id\": clientId\n      }\n    })\n      .then((data) => { console.log(data) })\n  }\n\n  var nonce = (length) => {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  var listen = (channelId) => {\n    let message = {\n      type: 'LISTEN',\n      nonce: nonce(15),\n      data: {\n        topics: [`channel-points-channel-v1.${channelId}`],\n        auth_token: sessionStorage.twitchOAuthToken\n      }\n    };\n    console.log(new Date.toLocaleString(), 'SENT:', message);\n    ws.send(JSON.stringify(message));\n  }\n\n  var heartbeat = () => {\n    let message = {\n      type: 'PING'\n    }\n    ws.current.send(JSON.stringify(message));\n  }\n\n  var connect = useCallback(() => {\n    var heartbeatInterval = 1000 * 60;\n    var reconnectInterval = 1000 * 3;\n    var heartbeatHandle;\n\n    ws.current = new WebSocket('wss://pubsub-edge.twitch.tv');\n\n    ws.current.onopen = function (event) {\n      console.log(new Date().toLocaleString(), 'INFO: Socket Opened');\n      heartbeat();\n      heartbeatHandle = setInterval(heartbeat, heartbeatInterval);\n    };\n\n    ws.current.onerror = function (error) {\n      console.error(new Date().toLocaleString(), 'ERR:', error);\n    };\n\n    ws.current.onmessage = function (event) {\n      let message = JSON.parse(event.data);\n      console.log(new Date().toLocaleString(), 'RECV:', message);\n      if (message.type === \"PONG\") {\n        if (!connected) {\n          getUserId()\n            .then(() => {\n              setConnected(true);\n            })\n        }\n      }\n      if (message.type === 'RECONNECT') {\n        console.log(new Date().toLocaleString(), 'INFO: Reconnecting...');\n        setTimeout(connect, reconnectInterval);\n      }\n      if (message.type === 'reward-redeemed') {\n        let color = message.data.redemption.user_input\n        let rgbValue = hexToRgb(color)\n        if (message.data.reward.title.includes(\"left\")) {\n          setLeft(rgbValue);\n        } else if (message.reward.title.includes(\"right\")) {\n          setRight(rgbValue);\n        }\n      }\n    };\n\n    ws.current.onclose = function () {\n      console.log(new Date().toLocaleString(), 'INFO: Socket Closed');\n      clearInterval(heartbeatHandle);\n      console.log(new Date().toLocaleString(), 'INFO: Reconnecting...');\n      setTimeout(connect, reconnectInterval);\n      setConnected(false)\n    };\n\n  }, [ws])\n\n  useEffect(() => {\n    if (document.location.hash.match(/access_token=(\\w+)/))\n      parseFragment(document.location.hash);\n    if (sessionStorage.twitchOAuthToken) {\n      connect();\n      setReady(true)\n      setDemo(false)\n    } else {\n      setAuthUrl(authUrl());\n      setReady(false)\n    }\n  }, [authUrl, connect]);\n\n  return (\n    <div className=\"header\" style={{ background: `linear-gradient(60deg, rgba(${left.r},${left.g},${left.b}) 0%, rgba(${right.r},${right.g},${right.b}) 100%)` }}>\n      <div className=\"inner-header flex\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div style={{ display: ready ? \"none\" : \"block\" }} className=\"auth text-center\">\n              <p>First, connect with your Twitch Account:</p>\n              <a id=\"auth-link\" href={_authUrl}><img src={logo} alt=\"logo\" /></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <svg className=\"waves\" xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shapeRendering=\"auto\">\n          <defs>\n            <path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\n          </defs>\n          <g className=\"parallax\">\n            <use href=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\n            <use href=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"rgba(255,255,255,0.5)\" />\n            <use href=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"rgba(255,255,255,0.3)\" />\n            <use href=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}